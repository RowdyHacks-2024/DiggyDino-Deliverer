#---Schema---

schema {

    query: Query
    mutation: Mutation

}

#---Basis---

type Query {

    get_user(user_id: String!): UserResult
    get_detector(detector_id: String!): DetectorResult!
    get_prediction(prediction_id: String!): PredictionResult!
    get_sample(sample_id: String!): SampleResult!

    get_detectors_by_user_id(user_id: String!): [DetectorResult]!
    get_predictions_by_user_id(user_id: String!): [DetectorResult]!
    get_samples_by_user_id(user_id: String!): [DetectorResult]!

}

type Mutation {

    add_user(user: UserInput!): UserResult!
    update_user(user: UserInput!): UserResult!
    delete_user(user_id: String!): DeletionResult!

    add_detector(detector: DetectorInput!): DetectorResult!
    update_detector(detector: DetectorInput!): DetectorResult!
    delete_detector(detector_id: String!): DeletionResult!

    add_sample(sample: SampleInput!): SampleResult!
    update_sample(sample: SampleInput!): SampleResult!
    delete_sample(sample_id: String!): DeletionResult!

    add_prediction(prediction: PredictionInput!): PredictionResult!
    update_prediction(prediction: PredictionInput!): PredictionResult!
    delete_prediction(prediction_id: String!): DeletionResult!

}

#---Inputs---

input UserInput {

    user_id: String!
    email: String!

}

input DetectorInput {

    user_id: String!
    detector_id: Int!

}

input SampleInput {

    user_id: String!
    longitude: Float!
    latitude: Float!
    temperature: Float!
    barametric_pressure: Float!
    Altitude: Float!

}

input PredictionInput {

    user_id: String!
    prediction_id: Int!
    is_valid: Boolean!

}

#---Results---

type DeletionResult {

    success: Boolean!
    errors: [String]
}

type UserResult {

    success: Boolean!
    errors: [String]
    user: User

}

type DetectorResult {

    success: Boolean!
    errors: [String]
    detector: Detector
}
    
type SampleResult {

    success: Boolean!
    errors: [String]
    sample: Sample

}

type PredictionResult {

    success: Boolean!
    errors: [String]
    prediction: Prediction

}


# ---Tables---

type User {
    
    user_id: String!
    email: String!
    
    detectors: [Detector]
    predictions: [Prediction]

}

type Detector {

    user_id: String!
    detector_id: Int!
    detector_name: String!

}

type Prediction {

    user_id: String!
    prediction_id: Int!

    is_valid: Boolean!
    sample_set: [Sample]!

}

type Sample {

    user_id: String!
    coordinates: Coordinate!
    climate: Climate!

}

# ---Custom Types---

type Coordinate {

    longitude: Float!
    latitude: Float!

}

type Climate {

    temperature: Float!
    barametric_pressure: Float!
    altitude: Float!

}

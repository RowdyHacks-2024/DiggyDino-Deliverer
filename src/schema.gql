#---Schema---

schema {

    query: Query
    mutation: Mutation

}

#---Basis---

type Query {

    user(user_id: String): [UserResult]!
    detector: [DetectorResult]!
    prediction: [PredictionResult]!

}

type Mutation {

    add_user(user: UserInput!): UserResult!
    update_user(user: UserInput!): UserResult!
    delete_user(user_id: String!): DeletionResult!

}

#---Inputs---

input UserInput {

    user_id: String!
    email: String!

}

input DetectorInput {

    user_id: String!
    detector_id: Int!

}

input SampleInput {



}

input PredictionInput {

    user_id: String!
    prediction_id: Int!
    is_valid: Boolean!

}

#---Results---

type DeletionResult {

    success: Boolean!
    errors: [String]
}

type UserResult {

    success: Boolean!
    errors: [String]
    user: User

}

type DetectorResult {

    success: Boolean!
    errors: [String]
    detector: Detector

}

type SampleResult {

    success: Boolean!
    errors: [String]
    sampe: Sample

}

type PredictionResult {

    success: Boolean!
    errors: [String]
    prediction: Prediction

}

# ---Tables---

type User {
    
    user_id: String!
    email: String!
    
    detectors: [Detector]
    predictions: [Prediction]

}

type Detector {

    user_id: String!
    detector_id: Int!
    detector_name: String!

}

type Prediction {

    user_id: String!
    prediction_id: Int!

    is_valid: Boolean!
    sample_set: [Sample]!

}

type Sample {

    coordinates: Coordinate!
    climate: Climate!

}

# ---Custom Types---

type Coordinate {

    longitude: Float!
    latitude: Float!

}

type Climate {

    temperature: Float!
    barametric_pressure: Float!
    altitude: Float!

}
